version: '3'
services:
  postgres:
    container_name: anadep-postgres
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/data/postgres
    volumes:
      - ./postgres:/data/postgres
    expose:
      - 5432
    command: -p 5432
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 60s
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
        - anadep-network

  backend:
    container_name: anadep-backend
    build: ./backend
    depends_on:
      - postgres
    ports:
      - 8080:8080
    environment:
      - SPRING_DATA_MONGODB_URI=${SPRING_DATA_MONGODB_URI}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://anadep-postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 60s
    networks:
        - anadep-network

  frontend:
    container_name: anadep-frontend
    build: ./frontend
    ports:
      - 3000:80
    depends_on:
      - backend
    environment:
      - REACT_APP_BASE_URL=http://anadep-backend:8080
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 60s
    networks:
        - anadep-network

networks:
  anadep-network:
    driver: bridge